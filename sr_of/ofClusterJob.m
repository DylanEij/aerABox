% This function aims to write the .pbs file for launching simulations in the 
% TU Delft cluster 
%       Author  : Gabriel Buendia
%       Version : 1
% Inputs:
%       job -> Structure containing job parameters
%              Fields:
%              -FolderPath: Path to save the file locally
%              -Name: Name asigned to the job in the cluster
%              -Queue: awep-test, awep-fast, awep-small, awep-medium, awep-large
%              -Hours: Time reserved for the job in the cluster
%              -Nodes: Number of nodes to be used
%              -Cores: Number of cores to be used
%              -NodeType: f, k, g, h, i
%              -Solver: Type of solver within OpenFOAM to be used
%              -FinalTime: End of the simulation
%              -Path: Path to specify the working directory in the cluster
function ofClusterJob(job)
fileName = fopen(append(job.FolderPath,'job.pbs'),'w');
if job.Hours > 9
    wallTime = append('#PBS -l walltime=',num2str(job.Hours),':00:00\n');
else
    wallTime = append('#PBS -l walltime=0',num2str(job.Hours),':00:00\n');
end
string = append(['#!/bin/bash\n' ...
                '#PBS -j oe\n' ...
                '#PBS -o log.mylog.${PBS_JOBID}\n' ...
                '#PBS -N ',job.Name,'\n' ...
                '#PBS -q ',job.Queue,'\n' ...
                wallTime ...
                '#PBS -l nodes=',num2str(job.Nodes),':ppn=',num2str(job.Cores),':type',job.NodeType,'\n' ...
                '#PBS -m abe\n' ...
                '#PBS -M G.E.BuendiaVela@student.tudelft.nl\n\n' ...
                '##################\n' ...
                '#User Settings\n' ...
                '##################\n\n' ...
                'solver=',job.Solver,'\n' ...
                'runNumber=1\n' ...
                'finalTime = ',num2str(job.FinalTime),'\n\n' ...
                'echo Job started on `uname -n` at `date`\n\n' ...
                'echo "Loading OpenFOAM-v2006"\n' ...
                'module load mpi/openmpi-1.8.8-gnu\n' ...
                'module load openfoam/v2006\n\n' ...
                '# Change to your working directory\n' ...
                'cd ',job.Path,'\n' ...
                'echo "Working directory: " ',job.Path,'\n\n' ...
                '#################\n' ...
                '# Run OpenFOAM in Parallel\n' ...
                '#################\n' ...
                'echo "Starting OpenFOAM job at: " $(date)\n\n' ...
                '# Decompose for parallel computing\n\n' ...
                'echo "Renumbering the mesh before decomposition"\n' ...
                'renumberMesh > log.renumberMesh.1 2>&1\n\n' ...
                'echo "Checking the mesh"\n' ...
                'checkMesh -latestTime > log.checkMesh.1 2>&1\n\n' ...
                'echo "Decomposing the domains"\n' ...
                'decomposePar -cellDist -force -latestTime > log.decomposePar 2>&1\n\n' ...
                '# Create solver log with run number of maximum 10\n' ...
                'touch log.$runNumber.$solver\n\n' ...                
                '# Run the solver (parallel)\n' ...
                'which $solver\n' ...
                'echo "Running " $solver\n' ...
                '# Actual line runs the openfoam\n' ...
                'mpirun --hostfile $PBS_NODEFILE $solver -parallel > log.$runNumber.$solver 2>&1\n' ...
                '# Post processing\n' ...
                'reconstructPar > log.reconstructPar.1 2>&1\n' ...
                'echo "solution reconstructed"\n\n' ...
                'touch foam.foam\n\n' ...         
                'rm -rf processor*\n' ...
                '$PBS_NODEFILE $solver -postProcess -func yPlus -time $finalTime > log.$runNumber.$solver.yPlus 2>&1\n' ...
                'echo "Removing decomposed folders"\n\n' ...
                'echo "Ending OpenFOAM job at: " $(date)\n']);
fprintf(fileName,string);
fclose(fileName);
end
